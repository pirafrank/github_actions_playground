on:
  push:
    branches:
      - main
    paths:
      - dummy.sh
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Build what? [base|bundle]'
        required: true
        default: 'base'
      reference:
        description: 'commit SHA or ref of branch or tag (e.g. refs/heads/NAME or refs/tags/NAME)'
        required: false
        default: ''

jobs:
  docker:
    runs-on: ubuntu-20.04
    env:
      RUN_INFO: ''
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.reference }}
    - name: Print workdir
      run: pwd
    - run: |
        echo "This is the event: $GITHUB_EVENT_NAME"
    - name: Set run info
      id: set_run_info
      shell: bash
      run: |
        RUN_INFO=$(cat << EOF
        Triggered by $GITHUB_EVENT_NAME
        Action run on $RUNNER_OS by $RUNNER_NAME
        Commit $GITHUB_SHA on $GITHUB_REF
        EOF
        )
        echo "RUN_INFO<<EOF" >> $GITHUB_ENV
        echo "$RUN_INFO" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    - name: Show run info
      run: |
        echo "${{ env.RUN_INFO }}"
    - name: Set date of today
      id: today
      shell: bash
      run: echo "::set-output name=today::$(date '+%Y%m%d')"
    - name: Extract branch name
      id: extract_branch_name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
    - name: "Print Github Actions context variables"
      id: 'gh_actions_ctx_vars'
      shell: bash
      run: |
        echo "GITHUB_BASE_REF $GITHUB_BASE_REF"
        echo "GITHUB_WORKFLOW $GITHUB_WORKFLOW"
        echo "GITHUB_REF $GITHUB_REF"
        echo "GITHUB_RUN_ID $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER $GITHUB_RUN_NUMBER"
        echo "GITHUB_WORKSPACE $GITHUB_WORKSPACE"
        echo "GITHUB_REPOSITORY $GITHUB_REPOSITORY"
        echo "GITHUB_SERVER_URL $GITHUB_SERVER_URL"
        WORKSPACE_VERSION=$(date '+%Y%m%d')
        echo "WORKSPACE_VERSION=$WORKSPACE_VERSION" >> $GITHUB_ENV
    - name: "Look for curl"
      id: "look_for_curl"
      shell: bash
      run: |
        curl -L fpira.com
    - name: "Look for jq and yq"
      id: "look_for_yq"
      shell: bash
      run: |
        command -v jq
        which jq
        command -v yq
        which yq
    - name: Extract short commit hash
      id: extract_short_hash
      shell: bash
      run:  echo "##[set-output name=currentcommit;]$(git rev-parse --short HEAD)"
    - uses: mukunku/tag-exists-action@v1.0.0
      name: Check if tag exists
      id: checkTag
      with:
        tag: ${{ env.WORKSPACE_VERSION }}+${{ steps.extract_short_hash.outputs.currentcommit }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: echo ${{ steps.checkTag.outputs.exists }}
    - name: Create a lightweight git tag
      uses: actions/github-script@v3
      if: (steps.checkTag.outputs.exists != format('{0}', 'true')) && (github.ref == format('refs/heads/{0}', 'main'))
      with:
        github-token: ${{ github.token }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ env.WORKSPACE_VERSION }}+${{ steps.extract_short_hash.outputs.currentcommit }}",
            sha: context.sha
          })
    - name: Send Push Notification
      uses: fjogeleit/http-request-action@master
      #if: always()
      if: ${{ false }}  # disable for now
      with:
        url: ${{ secrets.NOTIFICATION_WEBHOOK_URI }}
        method: 'POST'
        data: '{ "value1": "[GitHub] ${{ github.repository }}", "value2": "Build of branch ${{ steps.extract_branch_name.outputs.branch }} with target &quot;${{ github.event.inputs.build_target }}&quot; finished with status ${{job.status}}.", "value3": "<br>Workflow &quot;${{ github.workflow }}&quot; triggered by &quot;${{ github.event_name }}&quot;.<br>Action run on ${{ runner.os }} by ${{ runner.name }}.<br>Commit ${{ github.sha }} on ${{ github.ref }}.<br>https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'
